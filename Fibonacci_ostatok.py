'''Задача на программирование повышенной сложности:
огромное число Фибоначчи по модулю.

                        Условие:
Даны целые числа 1 <= N <= 10**18 и 2 <= M <= 10**5, необходимо
найти остаток от деления N-го числа Фибоначчи на М.'''

#                       Необходимые знания:
# Чиисла Фибоначчи - элементы числовой последовательности
# 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987...
# Период Пизано - это длина периода последовательности Фибоначчи по модулю
# заданного натурального числа M.

# (36-39): Цикл держит в памяти лишь необходимое количество чисел для расчета
# следующего числа Фибоначи, то есть 2 и если быть точнее, то при
# M < (second_fib + first_fib) не сами числа, а остаток от их деления на M.

# (40): Как только выполнилось условие:
# first_fib % M == 0 and second_fib % M == 1,
# прерываем программу. Pisano_period будет равняться периоду Пизано при задан-
# ном M.

# (42-43): Сбрасываем first_fib и second_fib до первоначальных значений.

# (45-47): За счет посчитанного Pisano_period экономим вычислительный ресурс
# и при помощи функции range(N % Pisano_period) выполняем минимальное число
# итераций для расчета остатка от деления N-ого числа Фибоначи на M.


def fib_mod(N, M):

    Pisano_period = 0
    first_fib = 0
    second_fib = 1

    for i in range(M * 6):
        Pisano_period += 1
        first_fib, second_fib = second_fib, (second_fib + first_fib) % M
        if first_fib % M == 0 and second_fib % M == 1:
            break

    first_fib = 0
    second_fib = 1

    for j in range(N % Pisano_period):
        first_fib, second_fib = second_fib, second_fib + first_fib
    return (first_fib % M)


def main():
    N, M = map(int, input('Введите через пробел N и M: ').split())
    print(fib_mod(N, M))


main()
